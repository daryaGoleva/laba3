"use strict";

var _utils = require("../../../utils");

class EnumMatchType {
  static get rule() {
    return 'enum-match-type';
  }

  OpenAPISchema() {
    return {
      onEnter: (node, _definition, ctx) => {
        return this.validate(node, ctx);
      }
    };
  }

  OAS2Schema() {
    return {
      onEnter: (node, _definition, ctx) => {
        return this.validate(node, ctx);
      }
    };
  }

  validate(node, ctx) {
    const errors = [];

    if (!node.enum || !Array.isArray(node.enum)) {
      return;
    }

    if (node.type && typeof node.type === 'string') {
      const typeMimsatch = node.enum.filter(item => !(0, _utils.matchesJsonSchemaType)(item, node.type));
      typeMimsatch.forEach(val => {
        ctx.path.push(node.enum.indexOf(val));
        errors.push(ctx.createError('All values of "enum" field must be of the same type as the "type" field.', 'value'));
        ctx.path.pop();
      });
    }

    return errors;
  }

}

module.exports = EnumMatchType;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy92aXNpdG9ycy9ydWxlcy9zZW1hbnRpYy9lbnVtLW1hdGNoLXR5cGUuanMiXSwibmFtZXMiOlsiRW51bU1hdGNoVHlwZSIsInJ1bGUiLCJPcGVuQVBJU2NoZW1hIiwib25FbnRlciIsIm5vZGUiLCJfZGVmaW5pdGlvbiIsImN0eCIsInZhbGlkYXRlIiwiT0FTMlNjaGVtYSIsImVycm9ycyIsImVudW0iLCJBcnJheSIsImlzQXJyYXkiLCJ0eXBlIiwidHlwZU1pbXNhdGNoIiwiZmlsdGVyIiwiaXRlbSIsImZvckVhY2giLCJ2YWwiLCJwYXRoIiwicHVzaCIsImluZGV4T2YiLCJjcmVhdGVFcnJvciIsInBvcCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBRUEsTUFBTUEsYUFBTixDQUFvQjtBQUNsQixhQUFXQyxJQUFYLEdBQWtCO0FBQ2hCLFdBQU8saUJBQVA7QUFDRDs7QUFFREMsRUFBQUEsYUFBYSxHQUFHO0FBQ2QsV0FBTztBQUNMQyxNQUFBQSxPQUFPLEVBQUUsQ0FBQ0MsSUFBRCxFQUFPQyxXQUFQLEVBQW9CQyxHQUFwQixLQUE0QjtBQUNuQyxlQUFPLEtBQUtDLFFBQUwsQ0FBY0gsSUFBZCxFQUFvQkUsR0FBcEIsQ0FBUDtBQUNEO0FBSEksS0FBUDtBQUtEOztBQUVERSxFQUFBQSxVQUFVLEdBQUc7QUFDWCxXQUFPO0FBQ0xMLE1BQUFBLE9BQU8sRUFBRSxDQUFDQyxJQUFELEVBQU9DLFdBQVAsRUFBb0JDLEdBQXBCLEtBQTRCO0FBQ25DLGVBQU8sS0FBS0MsUUFBTCxDQUFjSCxJQUFkLEVBQW9CRSxHQUFwQixDQUFQO0FBQ0Q7QUFISSxLQUFQO0FBS0Q7O0FBRURDLEVBQUFBLFFBQVEsQ0FBQ0gsSUFBRCxFQUFPRSxHQUFQLEVBQVk7QUFDbEIsVUFBTUcsTUFBTSxHQUFHLEVBQWY7O0FBQ0EsUUFBSSxDQUFDTCxJQUFJLENBQUNNLElBQU4sSUFBYyxDQUFDQyxLQUFLLENBQUNDLE9BQU4sQ0FBY1IsSUFBSSxDQUFDTSxJQUFuQixDQUFuQixFQUE2QztBQUMzQztBQUNEOztBQUNELFFBQUlOLElBQUksQ0FBQ1MsSUFBTCxJQUFhLE9BQU9ULElBQUksQ0FBQ1MsSUFBWixLQUFxQixRQUF0QyxFQUFnRDtBQUM5QyxZQUFNQyxZQUFZLEdBQUdWLElBQUksQ0FBQ00sSUFBTCxDQUFVSyxNQUFWLENBQWtCQyxJQUFELElBQVUsQ0FBQyxrQ0FBc0JBLElBQXRCLEVBQTRCWixJQUFJLENBQUNTLElBQWpDLENBQTVCLENBQXJCO0FBQ0FDLE1BQUFBLFlBQVksQ0FBQ0csT0FBYixDQUFzQkMsR0FBRCxJQUFTO0FBQzVCWixRQUFBQSxHQUFHLENBQUNhLElBQUosQ0FBU0MsSUFBVCxDQUFjaEIsSUFBSSxDQUFDTSxJQUFMLENBQVVXLE9BQVYsQ0FBa0JILEdBQWxCLENBQWQ7QUFDQVQsUUFBQUEsTUFBTSxDQUFDVyxJQUFQLENBQVlkLEdBQUcsQ0FBQ2dCLFdBQUosQ0FBZ0IsMEVBQWhCLEVBQTRGLE9BQTVGLENBQVo7QUFDQWhCLFFBQUFBLEdBQUcsQ0FBQ2EsSUFBSixDQUFTSSxHQUFUO0FBQ0QsT0FKRDtBQUtEOztBQUNELFdBQU9kLE1BQVA7QUFDRDs7QUFuQ2lCOztBQXNDcEJlLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQnpCLGFBQWpCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgbWF0Y2hlc0pzb25TY2hlbWFUeXBlIH0gZnJvbSAnLi4vLi4vLi4vdXRpbHMnO1xuXG5jbGFzcyBFbnVtTWF0Y2hUeXBlIHtcbiAgc3RhdGljIGdldCBydWxlKCkge1xuICAgIHJldHVybiAnZW51bS1tYXRjaC10eXBlJztcbiAgfVxuXG4gIE9wZW5BUElTY2hlbWEoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIG9uRW50ZXI6IChub2RlLCBfZGVmaW5pdGlvbiwgY3R4KSA9PiB7XG4gICAgICAgIHJldHVybiB0aGlzLnZhbGlkYXRlKG5vZGUsIGN0eCk7XG4gICAgICB9LFxuICAgIH07XG4gIH1cblxuICBPQVMyU2NoZW1hKCkge1xuICAgIHJldHVybiB7XG4gICAgICBvbkVudGVyOiAobm9kZSwgX2RlZmluaXRpb24sIGN0eCkgPT4ge1xuICAgICAgICByZXR1cm4gdGhpcy52YWxpZGF0ZShub2RlLCBjdHgpO1xuICAgICAgfSxcbiAgICB9O1xuICB9XG5cbiAgdmFsaWRhdGUobm9kZSwgY3R4KSB7XG4gICAgY29uc3QgZXJyb3JzID0gW107XG4gICAgaWYgKCFub2RlLmVudW0gfHwgIUFycmF5LmlzQXJyYXkobm9kZS5lbnVtKSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBpZiAobm9kZS50eXBlICYmIHR5cGVvZiBub2RlLnR5cGUgPT09ICdzdHJpbmcnKSB7XG4gICAgICBjb25zdCB0eXBlTWltc2F0Y2ggPSBub2RlLmVudW0uZmlsdGVyKChpdGVtKSA9PiAhbWF0Y2hlc0pzb25TY2hlbWFUeXBlKGl0ZW0sIG5vZGUudHlwZSkpO1xuICAgICAgdHlwZU1pbXNhdGNoLmZvckVhY2goKHZhbCkgPT4ge1xuICAgICAgICBjdHgucGF0aC5wdXNoKG5vZGUuZW51bS5pbmRleE9mKHZhbCkpO1xuICAgICAgICBlcnJvcnMucHVzaChjdHguY3JlYXRlRXJyb3IoJ0FsbCB2YWx1ZXMgb2YgXCJlbnVtXCIgZmllbGQgbXVzdCBiZSBvZiB0aGUgc2FtZSB0eXBlIGFzIHRoZSBcInR5cGVcIiBmaWVsZC4nLCAndmFsdWUnKSk7XG4gICAgICAgIGN0eC5wYXRoLnBvcCgpO1xuICAgICAgfSk7XG4gICAgfVxuICAgIHJldHVybiBlcnJvcnM7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBFbnVtTWF0Y2hUeXBlO1xuIl19
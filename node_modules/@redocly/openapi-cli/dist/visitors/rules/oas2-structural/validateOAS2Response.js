"use strict";

class ValidateOAS2Response {
  static get rule() {
    return 'oas2-schema/response';
  }

  get validators() {
    return {
      description(node, ctx) {
        if (node && !node.description && node.description !== '') {
          return ctx.createError(ctx.messageHelpers.missingRequiredField('description'), 'key');
        }

        if (typeof node.description !== 'string') {
          return ctx.createError(ctx.messageHelpers.fieldTypeMismatchMessageHelper('string'), 'value');
        }

        return null;
      }

    };
  }

  OAS2Response() {
    return {
      onEnter: (node, definition, ctx) => ctx.validateFields(this.config, this.rule, this.validators)
    };
  }

}

module.exports = ValidateOAS2Response;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy92aXNpdG9ycy9ydWxlcy9vYXMyLXN0cnVjdHVyYWwvdmFsaWRhdGVPQVMyUmVzcG9uc2UuanMiXSwibmFtZXMiOlsiVmFsaWRhdGVPQVMyUmVzcG9uc2UiLCJydWxlIiwidmFsaWRhdG9ycyIsImRlc2NyaXB0aW9uIiwibm9kZSIsImN0eCIsImNyZWF0ZUVycm9yIiwibWVzc2FnZUhlbHBlcnMiLCJtaXNzaW5nUmVxdWlyZWRGaWVsZCIsImZpZWxkVHlwZU1pc21hdGNoTWVzc2FnZUhlbHBlciIsIk9BUzJSZXNwb25zZSIsIm9uRW50ZXIiLCJkZWZpbml0aW9uIiwidmFsaWRhdGVGaWVsZHMiLCJjb25maWciLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBLE1BQU1BLG9CQUFOLENBQTJCO0FBQ3pCLGFBQVdDLElBQVgsR0FBa0I7QUFDaEIsV0FBTyxzQkFBUDtBQUNEOztBQUVELE1BQUlDLFVBQUosR0FBaUI7QUFDZixXQUFPO0FBQ0xDLE1BQUFBLFdBQVcsQ0FBQ0MsSUFBRCxFQUFPQyxHQUFQLEVBQVk7QUFDckIsWUFBSUQsSUFBSSxJQUFJLENBQUNBLElBQUksQ0FBQ0QsV0FBZCxJQUE2QkMsSUFBSSxDQUFDRCxXQUFMLEtBQXFCLEVBQXRELEVBQTBEO0FBQ3hELGlCQUFPRSxHQUFHLENBQUNDLFdBQUosQ0FBZ0JELEdBQUcsQ0FBQ0UsY0FBSixDQUFtQkMsb0JBQW5CLENBQXdDLGFBQXhDLENBQWhCLEVBQXdFLEtBQXhFLENBQVA7QUFDRDs7QUFDRCxZQUFJLE9BQU9KLElBQUksQ0FBQ0QsV0FBWixLQUE0QixRQUFoQyxFQUEwQztBQUN4QyxpQkFBT0UsR0FBRyxDQUFDQyxXQUFKLENBQWdCRCxHQUFHLENBQUNFLGNBQUosQ0FBbUJFLDhCQUFuQixDQUFrRCxRQUFsRCxDQUFoQixFQUE2RSxPQUE3RSxDQUFQO0FBQ0Q7O0FBQ0QsZUFBTyxJQUFQO0FBQ0Q7O0FBVEksS0FBUDtBQVdEOztBQUVEQyxFQUFBQSxZQUFZLEdBQUc7QUFDYixXQUFPO0FBQ0xDLE1BQUFBLE9BQU8sRUFBRSxDQUFDUCxJQUFELEVBQU9RLFVBQVAsRUFBbUJQLEdBQW5CLEtBQTJCQSxHQUFHLENBQUNRLGNBQUosQ0FDbEMsS0FBS0MsTUFENkIsRUFDckIsS0FBS2IsSUFEZ0IsRUFDVixLQUFLQyxVQURLO0FBRC9CLEtBQVA7QUFLRDs7QUF6QndCOztBQTRCM0JhLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQmhCLG9CQUFqQiIsInNvdXJjZXNDb250ZW50IjpbImNsYXNzIFZhbGlkYXRlT0FTMlJlc3BvbnNlIHtcbiAgc3RhdGljIGdldCBydWxlKCkge1xuICAgIHJldHVybiAnb2FzMi1zY2hlbWEvcmVzcG9uc2UnO1xuICB9XG5cbiAgZ2V0IHZhbGlkYXRvcnMoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGRlc2NyaXB0aW9uKG5vZGUsIGN0eCkge1xuICAgICAgICBpZiAobm9kZSAmJiAhbm9kZS5kZXNjcmlwdGlvbiAmJiBub2RlLmRlc2NyaXB0aW9uICE9PSAnJykge1xuICAgICAgICAgIHJldHVybiBjdHguY3JlYXRlRXJyb3IoY3R4Lm1lc3NhZ2VIZWxwZXJzLm1pc3NpbmdSZXF1aXJlZEZpZWxkKCdkZXNjcmlwdGlvbicpLCAna2V5Jyk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHR5cGVvZiBub2RlLmRlc2NyaXB0aW9uICE9PSAnc3RyaW5nJykge1xuICAgICAgICAgIHJldHVybiBjdHguY3JlYXRlRXJyb3IoY3R4Lm1lc3NhZ2VIZWxwZXJzLmZpZWxkVHlwZU1pc21hdGNoTWVzc2FnZUhlbHBlcignc3RyaW5nJyksICd2YWx1ZScpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgICAgfSxcbiAgICB9O1xuICB9XG5cbiAgT0FTMlJlc3BvbnNlKCkge1xuICAgIHJldHVybiB7XG4gICAgICBvbkVudGVyOiAobm9kZSwgZGVmaW5pdGlvbiwgY3R4KSA9PiBjdHgudmFsaWRhdGVGaWVsZHMoXG4gICAgICAgIHRoaXMuY29uZmlnLCB0aGlzLnJ1bGUsIHRoaXMudmFsaWRhdG9ycyxcbiAgICAgICksXG4gICAgfTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IFZhbGlkYXRlT0FTMlJlc3BvbnNlO1xuIl19
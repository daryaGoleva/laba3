"use strict";

class Operation2xxResponse {
  static get rule() {
    return 'operation-2xx-response';
  }

  OpenAPIResponseMap() {
    return {
      onExit: (node, _, ctx) => {
        if (ctx.definitionStack.find(definition => definition.name === 'OpenAPICallback')) {
          return [];
        }

        const codes = Object.keys(node);

        if (!codes.find(code => code[0] === '2' || code === 'default')) {
          return [ctx.createError('Operation must have at least one 2xx response.', 'key')];
        }

        return [];
      }
    };
  }

}

module.exports = Operation2xxResponse;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy92aXNpdG9ycy9ydWxlcy9zZW1hbnRpYy9vcGVyYXRpb24tMnh4LXJlc3BvbnNlLmpzIl0sIm5hbWVzIjpbIk9wZXJhdGlvbjJ4eFJlc3BvbnNlIiwicnVsZSIsIk9wZW5BUElSZXNwb25zZU1hcCIsIm9uRXhpdCIsIm5vZGUiLCJfIiwiY3R4IiwiZGVmaW5pdGlvblN0YWNrIiwiZmluZCIsImRlZmluaXRpb24iLCJuYW1lIiwiY29kZXMiLCJPYmplY3QiLCJrZXlzIiwiY29kZSIsImNyZWF0ZUVycm9yIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxNQUFNQSxvQkFBTixDQUEyQjtBQUN6QixhQUFXQyxJQUFYLEdBQWtCO0FBQ2hCLFdBQU8sd0JBQVA7QUFDRDs7QUFFREMsRUFBQUEsa0JBQWtCLEdBQUc7QUFDbkIsV0FBTztBQUNMQyxNQUFBQSxNQUFNLEVBQUUsQ0FBQ0MsSUFBRCxFQUFPQyxDQUFQLEVBQVVDLEdBQVYsS0FBa0I7QUFDeEIsWUFBSUEsR0FBRyxDQUFDQyxlQUFKLENBQW9CQyxJQUFwQixDQUEwQkMsVUFBRCxJQUFnQkEsVUFBVSxDQUFDQyxJQUFYLEtBQW9CLGlCQUE3RCxDQUFKLEVBQXFGO0FBQ25GLGlCQUFPLEVBQVA7QUFDRDs7QUFDRCxjQUFNQyxLQUFLLEdBQUdDLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZVCxJQUFaLENBQWQ7O0FBQ0EsWUFBSSxDQUFDTyxLQUFLLENBQUNILElBQU4sQ0FBWU0sSUFBRCxJQUFVQSxJQUFJLENBQUMsQ0FBRCxDQUFKLEtBQVksR0FBWixJQUFtQkEsSUFBSSxLQUFLLFNBQWpELENBQUwsRUFBa0U7QUFDaEUsaUJBQU8sQ0FBQ1IsR0FBRyxDQUFDUyxXQUFKLENBQWdCLGdEQUFoQixFQUFrRSxLQUFsRSxDQUFELENBQVA7QUFDRDs7QUFDRCxlQUFPLEVBQVA7QUFDRDtBQVZJLEtBQVA7QUFZRDs7QUFsQndCOztBQXFCM0JDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQmpCLG9CQUFqQiIsInNvdXJjZXNDb250ZW50IjpbImNsYXNzIE9wZXJhdGlvbjJ4eFJlc3BvbnNlIHtcbiAgc3RhdGljIGdldCBydWxlKCkge1xuICAgIHJldHVybiAnb3BlcmF0aW9uLTJ4eC1yZXNwb25zZSc7XG4gIH1cblxuICBPcGVuQVBJUmVzcG9uc2VNYXAoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIG9uRXhpdDogKG5vZGUsIF8sIGN0eCkgPT4ge1xuICAgICAgICBpZiAoY3R4LmRlZmluaXRpb25TdGFjay5maW5kKChkZWZpbml0aW9uKSA9PiBkZWZpbml0aW9uLm5hbWUgPT09ICdPcGVuQVBJQ2FsbGJhY2snKSkge1xuICAgICAgICAgIHJldHVybiBbXTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBjb2RlcyA9IE9iamVjdC5rZXlzKG5vZGUpO1xuICAgICAgICBpZiAoIWNvZGVzLmZpbmQoKGNvZGUpID0+IGNvZGVbMF0gPT09ICcyJyB8fCBjb2RlID09PSAnZGVmYXVsdCcpKSB7XG4gICAgICAgICAgcmV0dXJuIFtjdHguY3JlYXRlRXJyb3IoJ09wZXJhdGlvbiBtdXN0IGhhdmUgYXQgbGVhc3Qgb25lIDJ4eCByZXNwb25zZS4nLCAna2V5JyldO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBbXTtcbiAgICAgIH0sXG4gICAgfTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IE9wZXJhdGlvbjJ4eFJlc3BvbnNlO1xuIl19